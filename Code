#include<iostream>
using namespace std;

struct DataUser{
    int value;
    DataUser *prev;
    DataUser *next;
}*head, *tail, *cur, *newNode, *del, *temp;

void createNode(int val){
    head = new DataUser();
    head->value = val;
    head->prev = NULL;
    head->next = NULL;
    tail = head;
}

void addFirst(int val){
    newNode = new DataUser;
    newNode->value = val;
    newNode->prev = NULL;
    newNode->next = head;
    head = newNode;
}

void addMid(int val, int index){
    newNode = new DataUser();
    newNode->value = val;
    cur = head;
    int count = 1;
    while (count < index){
        cur = cur->next;
        count++;
    }
    newNode->prev = cur;
    newNode->next = cur->next;
    cur->next = newNode;

    cur = newNode->next;
    cur->prev = newNode;
}

void addLast(int val) {
	newNode = new DataUser();
	newNode->value = val;
	newNode->prev = tail;
	newNode->next = NULL;
	tail->next = newNode;
	tail = newNode;
}
void removeFirst() {
	del = head;
	head = del->next;
	head->prev = NULL;
	delete del;
}
void removeMid(int index) {
	cur = head;
	int count = 1;
	while(count < index) {
		cur = cur->next;
		count++;
	}
	del = cur;
	cur = cur->prev;
	temp = del->next;
	temp->prev = cur;
	cur->next = temp;
	
	delete del;
}
void removeLast() {
	del = tail;
	tail = tail->prev;
	tail->next = NULL;
	delete del;
}

void printNode1(){
    cur = head;
    while(cur != NULL){
        cout << "Angka : " << cur->value << endl;
        //step
        cur = cur->next;
    }
    cout << "\n------------------\n" << endl;
}

int main() {
	
	createNode(1);
	for(int i = 2; i < 6; i++) {
		addLast(i);
	}
	printNode1();
	
	addMid(33, 3);
	printNode1();
	
	removeMid(3);
	printNode1();
	
	return 0;
}
